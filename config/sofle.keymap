#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    macros {
        M_zero: M_zero {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp KP_N0 &kp KP_N0>
                ;
        };

        M_VSlang: M_VSlang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp K>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp M>
                ;
        };

        M_VShtml: M_VShtml {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp H &kp T &kp M &kp L &kp ENTER>
                ;
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1         &kp N2           &kp N3          &kp N4        &kp N5           &kp UP         &kp N6           &kp N7        &kp N8        &kp N9             &kp N0         &kp BACKSPACE
&kp TAB     &kp Q          &kp W            &kp E           &kp R         &kp T            &kp DOWN       &kp Y            &kp U         &kp I         &kp O              &kp P          &kp BSLH
&kp CAPS    &kp A          &kp S            &kp D           &kp F         &kp G            &kp LEFT       &kp H            &kp J         &kp K         &kp L              &kp SEMI       &kp APOS
&kp LSHFT   &kp Z          &kp X            &kp C           &kp V         &kp B            &kp RIGHT      &kp N            &kp M         &kp COMMA     &kp DOT            &kp FSLH       &kp RSHFT
&kp C_MUTE  &kp HOME       &kp PG_UP        &kp LGUI        &lt 1 ENTER   &mt LCTRL SPACE  &kp ENTER      &mt RCTRL SPACE  &lt 2 DELETE  &kp RALT      &kp PG_DN          &kp END
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp LALT       &kp TAB          &kp LS(TAB)      &kp F4        &kp LC(F5)    &mmv MOVE_UP     &mkp RCLK        &mkp MCLK     &kp KP_SLASH   &kp KP_ASTERISK   &kp DEL        &kp BSPC
&kp TILDE   &kp K_BACK     &trans           &kp UP           &kp DEL       &kp BSPC      &mmv MOVE_DOWN   &kp EQUAL        &kp KP_N7     &kp KP_N8      &kp KP_N9         &kp KP_MINUS   &kp PSCRN
&kp LCTRL   &kp K_FORWARD  &kp LEFT         &kp DOWN         &kp RIGHT     &kp LBKT      &mmv MOVE_LEFT   &kp RBKT         &kp KP_N4     &kp KP_N5      &kp KP_N6         &kp KP_PLUS    &kp ENTER
&kp LSHFT   &trans         &kp LC(F2)       &kp LC(LA(DOWN)) &kp LC(LS(V)) &kp LBRC      &mmv MOVE_RIGHT  &kp RBRC         &kp KP_N1     &kp KP_N2      &kp KP_N3         &kp MINUS      &kp RCTRL
&kp C_MUTE  &trans         &trans           &trans           &trans        &trans        &mkp LCLK        &trans           &trans        &kp KP_N0      &M_zero           &kp KP_DOT    
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };
        
        layer_2 {
            bindings = <
&kp TILDE  &kp F1          &kp F2           &kp F3           &kp F4        &kp F5        &mmv MOVE_UP     &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3      &bt BT_SEL 4   &trans
&trans     &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &trans           &trans        &trans        &mmv MOVE_DOWN   &trans           &bt BT_CLR    &bt BT_CLR_ALL  &trans            &kp LC(S)      &kp LC(P)
&trans     &rgb_ug RGB_EFF &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &trans        &trans        &mmv MOVE_LEFT   &trans           &out OUT_USB  &out OUT_BLE    &trans            &kp LC(LS(S))  &kp LC(O)
&trans     &rgb_ug RGB_BRI &rgb_ug RGB_BRD  &trans           &trans        &trans        &mmv MOVE_RIGHT  &M_VShtml        &M_VSlang     &kp LA(LS(F))   &trans            &trans         &trans
&trans     &sys_reset      &soft_off        &bootloader      &trans        &trans        &mkp LCLK        &trans           &trans        &sys_reset      &soft_off         &bootloader
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN>;
        };
    };
};
